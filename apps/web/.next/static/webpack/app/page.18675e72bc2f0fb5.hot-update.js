"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/trading-utils.ts":
/*!******************************!*\
  !*** ./lib/trading-utils.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeEquity: function() { return /* binding */ computeEquity; },\n/* harmony export */   computeStats: function() { return /* binding */ computeStats; },\n/* harmony export */   computeStrategyEquity: function() { return /* binding */ computeStrategyEquity; }\n/* harmony export */ });\n// Very simple equity curve: buy-and-hold on closes (placeholder for presets)\nfunction computeEquity(candles) {\n    if (!candles.length) return [];\n    const first = candles[0].close;\n    let equity = 1;\n    const out = [];\n    for(let i = 0; i < candles.length; i++){\n        const ret = i === 0 ? 0 : (candles[i].close - candles[i - 1].close) / candles[i - 1].close;\n        equity *= 1 + ret;\n        out.push({\n            time: candles[i].time,\n            value: equity\n        });\n    }\n    return out;\n}\nfunction computeStats(candles, equity) {\n    if (!candles.length || !equity.length) return {\n        pnlPct: 0,\n        sharpe: 0,\n        winRate: 0,\n        maxDD: 0\n    };\n    const rets = [];\n    for(let i = 1; i < candles.length; i++){\n        const r = (candles[i].close - candles[i - 1].close) / candles[i - 1].close;\n        rets.push(r);\n    }\n    const mean = rets.reduce((a, b)=>a + b, 0) / rets.length;\n    const std = Math.sqrt(rets.reduce((a, b)=>a + Math.pow(b - mean, 2), 0) / Math.max(1, rets.length - 1));\n    const sharpe = std > 0 ? mean / std * Math.sqrt(252) : 0;\n    const winRate = rets.filter((r)=>r > 0).length / rets.length;\n    const pnlPct = (equity[equity.length - 1].value - 1) * 100;\n    // Max drawdown\n    let peak = equity[0].value;\n    let maxDD = 0;\n    for (const p of equity){\n        if (p.value > peak) peak = p.value;\n        const dd = peak > 0 ? (peak - p.value) / peak : 0;\n        if (dd > maxDD) maxDD = dd;\n    }\n    return {\n        pnlPct,\n        sharpe,\n        winRate,\n        maxDD: maxDD * 100\n    };\n}\nfunction sma(values, period) {\n    const out = [];\n    let sum = 0;\n    for(let i = 0; i < values.length; i++){\n        sum += values[i];\n        if (i >= period) sum -= values[i - period];\n        out.push(i >= period - 1 ? sum / period : NaN);\n    }\n    return out;\n}\nfunction rsi(values) {\n    let period = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 14;\n    const out = [];\n    let avgGain = 0;\n    let avgLoss = 0;\n    for(let i = 1; i < values.length; i++){\n        const change = values[i] - values[i - 1];\n        const gain = Math.max(0, change);\n        const loss = Math.max(0, -change);\n        if (i <= period) {\n            avgGain += gain;\n            avgLoss += loss;\n            out.push(NaN);\n            if (i === period) {\n                avgGain /= period;\n                avgLoss /= period;\n                const rs = avgLoss === 0 ? 100 : avgGain / (avgLoss || 1e-12);\n                out[i - 1] = 100 - 100 / (1 + rs);\n            }\n            continue;\n        }\n        avgGain = (avgGain * (period - 1) + gain) / period;\n        avgLoss = (avgLoss * (period - 1) + loss) / period;\n        const rs = avgLoss === 0 ? 100 : avgGain / (avgLoss || 1e-12);\n        out.push(100 - 100 / (1 + rs));\n    }\n    out.unshift(NaN) // align length to values\n    ;\n    return out;\n}\nfunction computeStrategyEquity(candles, kind) {\n    if (candles.length === 0) return [];\n    const closes = candles.map((c)=>c.close);\n    let inPos = false;\n    let equity = 1;\n    const out = [];\n    const push = (i)=>out.push({\n            time: candles[i].time,\n            value: equity\n        });\n    if (kind === \"SMA Cross\") {\n        const fast = sma(closes, 20);\n        const slow = sma(closes, 50);\n        for(let i = 1; i < candles.length; i++){\n            const enter = !inPos && fast[i] > slow[i] && !isNaN(fast[i]) && !isNaN(slow[i]);\n            const exit = inPos && fast[i] < slow[i];\n            if (enter) inPos = true;\n            if (exit) inPos = false;\n            const ret = (closes[i] - closes[i - 1]) / closes[i - 1];\n            if (inPos) equity *= 1 + ret;\n            push(i);\n        }\n    } else if (kind === \"RSI Mean Reversion\") {\n        const r = rsi(closes, 14);\n        for(let i = 1; i < candles.length; i++){\n            const enter = !inPos && r[i] < 30;\n            const exit = inPos && r[i] > 55;\n            if (enter) inPos = true;\n            if (exit) inPos = false;\n            const ret = (closes[i] - closes[i - 1]) / closes[i - 1];\n            if (inPos) equity *= 1 + ret;\n            push(i);\n        }\n    } else if (kind === \"Breakout\") {\n        const lookback = 20;\n        for(let i = 1; i < candles.length; i++){\n            const start = Math.max(0, i - lookback);\n            const windowHigh = Math.max(...closes.slice(start, i));\n            const windowLow = Math.min(...closes.slice(start, i));\n            const enter = !inPos && closes[i] > windowHigh;\n            const exit = inPos && closes[i] < windowLow;\n            if (enter) inPos = true;\n            if (exit) inPos = false;\n            const ret = (closes[i] - closes[i - 1]) / closes[i - 1];\n            if (inPos) equity *= 1 + ret;\n            push(i);\n        }\n    }\n    if (out.length === 0) return computeEquity(candles);\n    return out;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/trading-utils.ts\n"));

/***/ })

});